<h1 align="center"> Request's Information</h1>
<div class="container-fluid">
  <div class="container">
    <div class="row">
      <div class="col">
        <span><b>Delivery Address: </b></span><%= @request.address %><br>
        <span><b>Longitude: </b></span><%= @request.longitude %><br>
        <span><b>Latitude: </b></span><%= @request.latitude %><br>
        <span><b>Status: </b></span><%= @request.status %><br>
        <% unless @request.comment.blank? %>
            <span><b>Comment: </b></span><%= @request.comment %><br>
        <% end %>

        <% unless @request.phone.blank? %>
            <span><b>Phone: </b></span><%= @request.phone %><br>
        <% end %>

        <% if @request.has_reserve == 1 %>
            <span><b>Pre-order: </b></span><%= @request.reserve.strftime("%H:%M | %d/%m/%Y") %><br>
        <% end %>

        <% unless @request.shipper_id.blank?  %>
            <% invoice = Invoice.find_by_request_id(@request.id) %>
            <span><b>Shipper: </b></span><%= Shipper.find(invoice.shipper_id).first_name + " " + Shipper.find(invoice.shipper_id).second_name%><br>
        <% end %>
        <%= button_to "Go to shop", user_shop_path(current_user.id, @shop.id), class: "btn btn-outline-primary", form: {style: 'display:inline-block;'},type: "button", :method => :get %>
        <%= button_to "Edit", edit_user_shop_request_path(current_user.id, @shop.id, @request.id), class: "btn btn-outline-dark", method: "get", type: "button", form: {style: 'display:inline-block;'}%>
        <%= button_to "Delete", user_shop_request_path(@request.id), class: "btn btn-outline-danger", type: "button", method: :delete, data: { confirm: "Are you sure?"}, form: {style: 'display:inline-block;'} %>

      </div>
      <div class="col">
        <div class="col">
          <div id="map" style='width: 100%; height: 90%;'></div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
    handler = Gmaps.build('Google');
    handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
        markers = handler.addMarkers(<%=raw @hash.to_json %>);
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
    });
    handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
        markers = handler.addMarkers(<%=raw @hash2.to_json %>);
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
    });
</script>